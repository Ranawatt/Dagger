// Generated by Dagger (https://google.github.io/dagger).
package com.example.dagger;

import com.example.dagger.data.local.DatabaseService;
import com.example.dagger.data.remote.NetworkService;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MyApplication_MembersInjector implements MembersInjector<MyApplication> {
  private final Provider<NetworkService> networkServiceProvider;

  private final Provider<DatabaseService> databaseServiceProvider;

  public MyApplication_MembersInjector(
      Provider<NetworkService> networkServiceProvider,
      Provider<DatabaseService> databaseServiceProvider) {
    this.networkServiceProvider = networkServiceProvider;
    this.databaseServiceProvider = databaseServiceProvider;
  }

  public static MembersInjector<MyApplication> create(
      Provider<NetworkService> networkServiceProvider,
      Provider<DatabaseService> databaseServiceProvider) {
    return new MyApplication_MembersInjector(networkServiceProvider, databaseServiceProvider);
  }

  @Override
  public void injectMembers(MyApplication instance) {
    injectNetworkService(instance, networkServiceProvider.get());
    injectDatabaseService(instance, databaseServiceProvider.get());
  }

  public static void injectNetworkService(MyApplication instance, NetworkService networkService) {
    instance.networkService = networkService;
  }

  public static void injectDatabaseService(
      MyApplication instance, DatabaseService databaseService) {
    instance.databaseService = databaseService;
  }
}
